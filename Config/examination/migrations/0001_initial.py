# Generated by Django 5.1.2 on 2024-11-02 13:08

import ckeditor.fields
import datetime
import django.db.models.deletion
import django.utils.timezone
import examination.models
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('base', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CBTCategory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('number_of_subject', models.IntegerField(blank=True, default=4, null=True)),
                ('description', models.TextField(default='', max_length=100)),
                ('exam_date', models.DateField(blank=True, default=django.utils.timezone.now, null=True)),
                ('start_time', models.TimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('end_time', models.TimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('duration', models.DurationField(default=datetime.timedelta(seconds=7200))),
                ('published', models.BooleanField(default=False)),
                ('assigned_class', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cbt_categories', to='base.classname')),
                ('created_by', models.ForeignKey(blank=True, limit_choices_to={'role__in': ['teacher', 'tech_support', 'mini_tech_support', 'superuser']}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='created_cbt_categories', to=settings.AUTH_USER_MODEL)),
                ('session', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='base.session')),
                ('supervisor', models.ForeignKey(blank=True, limit_choices_to={'role__in': ['teacher', 'tech_support', 'mini_tech_support', 'superuser']}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cbt_supervisor', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-created_on',),
            },
        ),
        migrations.CreateModel(
            name='CBTExam',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('year', models.CharField(default='2024', max_length=4)),
                ('duration', models.DurationField(default=datetime.timedelta(seconds=7200))),
                ('start_time', models.TimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('end_time', models.TimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('exam_date', models.DateField(default=django.utils.timezone.now)),
                ('assigned_class', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='base.classname')),
                ('cbt_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='exams', to='examination.cbtcategory')),
                ('created_by', models.ForeignKey(limit_choices_to={'role__in': ['teacher', 'tech_support', 'mini_tech_support', 'superuser']}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='created_cbt_exams', to=settings.AUTH_USER_MODEL)),
                ('session', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='base.session')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cbt_exams', to='base.subject')),
                ('supervisor', models.ForeignKey(blank=True, limit_choices_to={'role__in': ['teacher', 'tech_support', 'mini_tech_support', 'superuser']}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cbt_exam_supervisor', to=settings.AUTH_USER_MODEL)),
                ('teacher', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='base.teacherprofile')),
            ],
            options={
                'ordering': ('-created_on',),
            },
        ),
        migrations.CreateModel(
            name='CBTResult',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('total_questions', models.IntegerField(default=0)),
                ('correct_answers', models.IntegerField(default=0)),
                ('incorrect_answers', models.IntegerField(default=0)),
                ('skipped_answers', models.IntegerField(default=0)),
                ('score', models.FloatField(default=0)),
                ('score_percentage', models.FloatField(blank=True, null=True)),
                ('cbt_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='examination.cbtcategory')),
                ('cbt_exam', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cbt_exam_results', to='examination.cbtexam')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_cbt_results', to='base.studentprofile')),
            ],
            options={
                'ordering': ('-created_on',),
            },
        ),
        migrations.CreateModel(
            name='Exam',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('year', models.CharField(default='2024', max_length=4)),
                ('instruction', models.CharField(default='Answer All Questions', max_length=100)),
                ('total_marks', models.PositiveIntegerField(default=100)),
                ('duration', models.DurationField(default=datetime.timedelta(seconds=3000))),
                ('start_time', models.TimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('end_time', models.TimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('exam_date', models.DateField(default=django.utils.timezone.now)),
                ('published', models.BooleanField(default=False)),
                ('assigned_class', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='base.classname')),
                ('course', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='base.course')),
                ('created_by', models.ForeignKey(limit_choices_to={'role__in': ['teacher', 'tech_support', 'mini_tech_support', 'superuser']}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='created_exams', to=settings.AUTH_USER_MODEL)),
                ('session', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='base.session')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.subject')),
                ('supervisor', models.ForeignKey(blank=True, limit_choices_to={'role__in': ['teacher', 'tech_support', 'mini_tech_support', 'superuser']}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='supervisor', to=settings.AUTH_USER_MODEL)),
                ('teacher', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='base.teacherprofile')),
            ],
            options={
                'ordering': ('-created_on',),
            },
        ),
        migrations.CreateModel(
            name='ExamPracticeCategory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('assigned_class', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='exam_practice_categories', to='base.classname')),
                ('created_by', models.ForeignKey(limit_choices_to={'role__in': ['teacher', 'tech_support', 'mini_tech_support', 'superuser']}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='created_exam_practice_categories', to=settings.AUTH_USER_MODEL)),
                ('session', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='base.session')),
            ],
            options={
                'ordering': ('-created_on',),
            },
        ),
        migrations.CreateModel(
            name='ExamPractice',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('number_of_subject', models.IntegerField(blank=True, default=4, null=True)),
                ('year', models.CharField(default='2024', max_length=4)),
                ('duration', models.DurationField(default=datetime.timedelta(seconds=7200))),
                ('start_time', models.TimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('end_time', models.TimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('exam_date', models.DateField(default=django.utils.timezone.now)),
                ('assigned_class', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='base.classname')),
                ('created_by', models.ForeignKey(limit_choices_to={'role__in': ['teacher', 'tech_support', 'mini_tech_support', 'superuser']}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='created_exam_practices', to=settings.AUTH_USER_MODEL)),
                ('session', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='base.session')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exam_practices', to='base.subject')),
                ('supervisor', models.ForeignKey(blank=True, limit_choices_to={'role__in': ['teacher', 'tech_support', 'mini_tech_support', 'superuser']}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='exam_practice_supervisor', to=settings.AUTH_USER_MODEL)),
                ('teacher', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='base.teacherprofile')),
                ('exam_practice_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='exams', to='examination.exampracticecategory')),
            ],
            options={
                'ordering': ('-created_on',),
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('question_type', models.CharField(choices=[('Past-Question', 'Past-Question'), ('Teacher-Question', 'Teacher-Question')], default='Past-Question', max_length=50)),
                ('number', models.IntegerField(blank=True, default=0, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to=examination.models.examQuestionImagePath)),
                ('content', ckeditor.fields.RichTextField(blank=True, max_length=1000, null=True)),
                ('explanation', ckeditor.fields.RichTextField(blank=True, max_length=1000, null=True)),
                ('mark', models.SmallIntegerField(blank=True, default=2, null=True)),
                ('level', models.CharField(choices=[('Easy', 'Easy'), ('Normal', 'Normal'), ('Hard', 'Hard'), ('Advanced', 'Advanced')], default='Normal', max_length=20)),
                ('cbt', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cbt_questions', to='examination.cbtexam')),
                ('created_by', models.ForeignKey(limit_choices_to={'role__in': ['teacher', 'tech_support', 'mini_tech_support', 'superuser']}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='created_questions', to=settings.AUTH_USER_MODEL)),
                ('exam', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='examination.exam')),
                ('exam_practice', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='exam_practice_questions', to='examination.exampractice')),
                ('subject', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='base.subject')),
                ('topic', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='base.topic')),
            ],
            options={
                'ordering': ('-created_on',),
            },
        ),
        migrations.CreateModel(
            name='Option',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('content', ckeditor.fields.RichTextField(blank=True, max_length=1000, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to=examination.models.examOptionImagePath)),
                ('is_correct', models.BooleanField(default=False)),
                ('created_by', models.ForeignKey(limit_choices_to={'role__in': ['teacher', 'tech_support', 'mini_tech_support', 'superuser']}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='created_options', to=settings.AUTH_USER_MODEL)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='options', to='examination.question')),
            ],
            options={
                'ordering': ('-created_on',),
            },
        ),
        migrations.CreateModel(
            name='Result',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('score', models.FloatField()),
                ('score_percentage', models.FloatField(blank=True, null=True)),
                ('exam', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='results', to='examination.exam')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='results', to='base.studentprofile')),
            ],
            options={
                'ordering': ('-created_on',),
            },
        ),
        migrations.CreateModel(
            name='StudentAnswer',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('exam', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='examination.exam')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='examination.question')),
                ('selected_option', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='examination.option')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='base.studentprofile')),
            ],
            options={
                'ordering': ('-created_on',),
            },
        ),
        migrations.CreateModel(
            name='StudentCBTAnswer',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('cbt_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='examination.cbtcategory')),
                ('cbt_exam', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='examination.cbtexam')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='examination.question')),
                ('selected_option', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='examination.option')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cbt_answers', to='base.studentprofile')),
            ],
            options={
                'ordering': ('-created_on',),
            },
        ),
    ]
