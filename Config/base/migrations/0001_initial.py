# Generated by Django 5.1.2 on 2024-11-02 11:51

import base.models
import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='ContactUs',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=50)),
                ('email', models.EmailField(max_length=254)),
                ('message', models.TextField(max_length=500)),
            ],
            options={
                'verbose_name_plural': 'Contact Us',
            },
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('session', models.CharField(help_text='Format: 2024/2025', max_length=15, null=True)),
                ('name', models.CharField(choices=[('Batch-A', 'Batch-A'), ('Batch-B', 'Batch-B'), ('Batch-C', 'Batch-C')], max_length=100, null=True)),
                ('start_date', models.DateField(default=django.utils.timezone.now)),
                ('closing_date', models.DateField(default=django.utils.timezone.now)),
            ],
            options={
                'verbose_name_plural': 'School Session',
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('middle_name', models.CharField(max_length=50)),
                ('email', models.EmailField(blank=True, max_length=200, null=True, unique=True)),
                ('avatar', models.ImageField(blank=True, default='avatars/avatar.svg', null=True, upload_to=base.models.userAvatarPath)),
                ('role', models.CharField(choices=[('administrator', 'Administrator'), ('academic_director', 'Academic Director'), ('cluster_manager', 'Cluster Manager'), ('guest', 'Guest'), ('mini_tech_support', 'Mini Tech Support'), ('mini_manager', 'Mini Manager'), ('parent', 'Parent'), ('project_manager', 'Project Manager'), ('school_staff', 'School Staff'), ('teacher', 'Teacher'), ('student', 'Student'), ('tech_support', 'Tech Support')], max_length=20)),
                ('is_suspended', models.BooleanField(default=False)),
                ('is_deleted', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name_plural': 'Custom Users',
                'ordering': ('created_on', 'first_name', 'last_name'),
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ClassName',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=20, unique=True)),
                ('created_by', models.ForeignKey(blank=True, limit_choices_to={'role__in': ['administrator', 'academic_director', 'tech_support', 'mini_tech_support', 'superuser']}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_class_names', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Class Names',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ClassSection',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(choices=[('Section-A', 'Section-A'), ('Section-B', 'Section-B'), ('Section-C', 'Section-C'), ('Default', 'Default'), ('Graduated', 'Graduated')], max_length=50, unique=True)),
                ('created_by', models.ForeignKey(blank=True, limit_choices_to={'role__in': ['administrator', 'academic_director', 'tech_support', 'mini_tech_support', 'superuser']}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_class_sections', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Class Sections',
            },
        ),
        migrations.CreateModel(
            name='Class',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, limit_choices_to={'role__in': ['administrator', 'academic_director', 'tech_support', 'mini_tech_support', 'superuser']}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_class', to=settings.AUTH_USER_MODEL)),
                ('name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.classname')),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.classsection')),
            ],
            options={
                'verbose_name_plural': 'Classes',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(choices=[('Engineering', 'Engineering'), ('Medicine', 'Medicine'), ('Accounting', 'Accounting'), ('Administration', 'Administration'), ('Building-Tech', 'Building-Tech'), ('Science-Laboratory', 'Science-Laboratory'), ('Computer-Science', 'Computer-Science')], max_length=100)),
                ('created_by', models.ForeignKey(blank=True, limit_choices_to={'role__in': ['administrator', 'academic_director', 'tech_support', 'mini_tech_support', 'superuser']}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_courses', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SchoolBranch',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=200)),
                ('created_by', models.ForeignKey(blank=True, limit_choices_to={'role__in': ['administrator', 'academic_director', 'tech_support', 'mini_tech_support', 'superuser']}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_school_branches', to=settings.AUTH_USER_MODEL)),
                ('manager', models.OneToOneField(blank=True, limit_choices_to={'role__in': ['administrator', 'academic_director', 'tech_support', 'mini_tech_support', 'superuser']}, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PrevillagedUserProfile',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('bio', models.TextField(blank=True, max_length=500, null=True)),
                ('gender', models.CharField(blank=True, choices=[('Male', 'Male'), ('Female', 'Female')], max_length=10, null=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('nationality', models.CharField(blank=True, choices=[('Benin', 'Benin'), ('Burkina Faso', 'Burkina Faso'), ('Cape Verde', 'Cape Verde'), ("Ivory Coast (Cote d'Ivoire)", "Ivory Coast (Cote d'Ivoire)"), ('Gambia', 'Gambia'), ('Ghana', 'Ghana'), ('Guinea', 'Guinea'), ('Guinea-Bissau', 'Guinea-Bissau'), ('Liberia', 'Liberia'), ('Mali', 'Mali'), ('Mauritania', 'Mauritania'), ('Niger', 'Niger'), ('Nigeria', 'Nigeria'), ('Senegal', 'Senegal'), ('Sierra Leone', 'Sierra Leone'), ('Togo', 'Togo')], max_length=30, null=True)),
                ('state', models.CharField(blank=True, choices=[('Enugu', 'Enugu'), ('Anambra', 'Anambra'), ('Imo', 'Imo'), ('Abia', 'Abia'), ('Ebonyi', 'Ebonyi')], max_length=30, null=True)),
                ('local_government_area', models.CharField(blank=True, choices=[('Aninri', 'Aninri'), ('Awgu', 'Awgu'), ('Enugu East', 'Enugu East'), ('Enugu North', 'Enugu North'), ('Enugu South', 'Enugu South'), ('Ezeagu', 'Ezeagu'), ('Igbo Etiti', 'Igbo Etiti'), ('Igbo Eze North', 'Igbo Eze North'), ('Igbo Eze South', 'Igbo Eze South'), ('Isi Uzo', 'Isi Uzo'), ('Nkanu East', 'Nkanu East'), ('Nkanu West', 'Nkanu West'), ('Nsukka', 'Nsukka'), ('Oji River', 'Oji River'), ('Udenu', 'Udenu'), ('Udi', 'Udi'), ('Uzo Uwani', 'Uzo Uwani')], max_length=50, null=True)),
                ('town', models.CharField(blank=True, max_length=100, null=True)),
                ('religion', models.CharField(blank=True, choices=[('Christian', 'Christian'), ('Muslim', 'Muslim'), ('Judaism', 'Judaism'), ('Others', 'Others')], max_length=50, null=True)),
                ('custom_user_id', models.UUIDField(null=True)),
                ('address', models.CharField(blank=True, max_length=200, null=True)),
                ('relationship', models.CharField(choices=[('Single', 'Single'), ('Married', 'Married'), ('Divorced', 'Divorced'), ('Separated', 'Separated'), ('Single Parent', 'Single Parent')], max_length=15, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=16, null=True)),
                ('created_by', models.ForeignKey(blank=True, limit_choices_to={'role__in': ['administrator', 'academic_director', 'tech_support', 'mini_tech_support', 'superuser']}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='previllaged_profiles', to=settings.AUTH_USER_MODEL)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('school_branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='base.schoolbranch')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ParentProfile',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('bio', models.TextField(blank=True, max_length=500, null=True)),
                ('gender', models.CharField(blank=True, choices=[('Male', 'Male'), ('Female', 'Female')], max_length=10, null=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('nationality', models.CharField(blank=True, choices=[('Benin', 'Benin'), ('Burkina Faso', 'Burkina Faso'), ('Cape Verde', 'Cape Verde'), ("Ivory Coast (Cote d'Ivoire)", "Ivory Coast (Cote d'Ivoire)"), ('Gambia', 'Gambia'), ('Ghana', 'Ghana'), ('Guinea', 'Guinea'), ('Guinea-Bissau', 'Guinea-Bissau'), ('Liberia', 'Liberia'), ('Mali', 'Mali'), ('Mauritania', 'Mauritania'), ('Niger', 'Niger'), ('Nigeria', 'Nigeria'), ('Senegal', 'Senegal'), ('Sierra Leone', 'Sierra Leone'), ('Togo', 'Togo')], max_length=30, null=True)),
                ('state', models.CharField(blank=True, choices=[('Enugu', 'Enugu'), ('Anambra', 'Anambra'), ('Imo', 'Imo'), ('Abia', 'Abia'), ('Ebonyi', 'Ebonyi')], max_length=30, null=True)),
                ('local_government_area', models.CharField(blank=True, choices=[('Aninri', 'Aninri'), ('Awgu', 'Awgu'), ('Enugu East', 'Enugu East'), ('Enugu North', 'Enugu North'), ('Enugu South', 'Enugu South'), ('Ezeagu', 'Ezeagu'), ('Igbo Etiti', 'Igbo Etiti'), ('Igbo Eze North', 'Igbo Eze North'), ('Igbo Eze South', 'Igbo Eze South'), ('Isi Uzo', 'Isi Uzo'), ('Nkanu East', 'Nkanu East'), ('Nkanu West', 'Nkanu West'), ('Nsukka', 'Nsukka'), ('Oji River', 'Oji River'), ('Udenu', 'Udenu'), ('Udi', 'Udi'), ('Uzo Uwani', 'Uzo Uwani')], max_length=50, null=True)),
                ('town', models.CharField(blank=True, max_length=100, null=True)),
                ('religion', models.CharField(blank=True, choices=[('Christian', 'Christian'), ('Muslim', 'Muslim'), ('Judaism', 'Judaism'), ('Others', 'Others')], max_length=50, null=True)),
                ('custom_user_id', models.UUIDField(null=True)),
                ('identification_type', models.CharField(blank=True, choices=[('National Identification', 'National Identification'), ("Personal Voter's Card", "Personal Voter's Card"), ('Driver License', 'Driver License')], max_length=50, null=True)),
                ('identification_number', models.CharField(blank=True, max_length=100, null=True)),
                ('address', models.CharField(blank=True, max_length=300, null=True)),
                ('father_occupation', models.CharField(blank=True, max_length=50, null=True)),
                ('mother_occupation', models.CharField(blank=True, max_length=50, null=True)),
                ('father_work_address', models.CharField(blank=True, max_length=200, null=True)),
                ('mother_work_address', models.CharField(blank=True, max_length=200, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=16, null=True)),
                ('secondary_phone_number', models.CharField(blank=True, max_length=14, null=True)),
                ('created_by', models.ForeignKey(blank=True, limit_choices_to={'role__in': ['administrator', 'academic_director', 'tech_support', 'mini_tech_support', 'superuser']}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='parent_profiles', to=settings.AUTH_USER_MODEL)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('school_branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='base.schoolbranch')),
                ('session', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='base.session')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='StudentProfile',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('bio', models.TextField(blank=True, max_length=500, null=True)),
                ('gender', models.CharField(blank=True, choices=[('Male', 'Male'), ('Female', 'Female')], max_length=10, null=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('nationality', models.CharField(blank=True, choices=[('Benin', 'Benin'), ('Burkina Faso', 'Burkina Faso'), ('Cape Verde', 'Cape Verde'), ("Ivory Coast (Cote d'Ivoire)", "Ivory Coast (Cote d'Ivoire)"), ('Gambia', 'Gambia'), ('Ghana', 'Ghana'), ('Guinea', 'Guinea'), ('Guinea-Bissau', 'Guinea-Bissau'), ('Liberia', 'Liberia'), ('Mali', 'Mali'), ('Mauritania', 'Mauritania'), ('Niger', 'Niger'), ('Nigeria', 'Nigeria'), ('Senegal', 'Senegal'), ('Sierra Leone', 'Sierra Leone'), ('Togo', 'Togo')], max_length=30, null=True)),
                ('state', models.CharField(blank=True, choices=[('Enugu', 'Enugu'), ('Anambra', 'Anambra'), ('Imo', 'Imo'), ('Abia', 'Abia'), ('Ebonyi', 'Ebonyi')], max_length=30, null=True)),
                ('local_government_area', models.CharField(blank=True, choices=[('Aninri', 'Aninri'), ('Awgu', 'Awgu'), ('Enugu East', 'Enugu East'), ('Enugu North', 'Enugu North'), ('Enugu South', 'Enugu South'), ('Ezeagu', 'Ezeagu'), ('Igbo Etiti', 'Igbo Etiti'), ('Igbo Eze North', 'Igbo Eze North'), ('Igbo Eze South', 'Igbo Eze South'), ('Isi Uzo', 'Isi Uzo'), ('Nkanu East', 'Nkanu East'), ('Nkanu West', 'Nkanu West'), ('Nsukka', 'Nsukka'), ('Oji River', 'Oji River'), ('Udenu', 'Udenu'), ('Udi', 'Udi'), ('Uzo Uwani', 'Uzo Uwani')], max_length=50, null=True)),
                ('town', models.CharField(blank=True, max_length=100, null=True)),
                ('religion', models.CharField(blank=True, choices=[('Christian', 'Christian'), ('Muslim', 'Muslim'), ('Judaism', 'Judaism'), ('Others', 'Others')], max_length=50, null=True)),
                ('custom_user_id', models.UUIDField(null=True)),
                ('admission_year', models.DateField(blank=True, null=True)),
                ('registration_number', models.CharField(blank=True, max_length=200, null=True)),
                ('class_number', models.PositiveIntegerField(blank=True, null=True)),
                ('student_status', models.CharField(choices=[('Full-time', 'Full-time'), ('Part-time', 'Part-time')], default='Full-time', max_length=30)),
                ('is_first_child', models.BooleanField(blank=True, default=False, null=True)),
                ('is_last_child', models.BooleanField(blank=True, default=False, null=True)),
                ('current_address', models.CharField(blank=True, max_length=200, null=True)),
                ('permanent_address', models.CharField(blank=True, max_length=200, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=16, null=True)),
                ('previous_school', models.CharField(blank=True, max_length=200, null=True)),
                ('previous_school_date', models.DateField(blank=True, null=True)),
                ('reason_for_leaving', models.TextField(blank=True, max_length=500, null=True)),
                ('any_disability', models.CharField(blank=True, choices=[('No', 'No'), ('Yes', 'Yes')], max_length=5, null=True)),
                ('disability_description', models.CharField(blank=True, max_length=200, null=True)),
                ('classes', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='base.class')),
                ('course', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='base.course')),
                ('created_by', models.ForeignKey(blank=True, limit_choices_to={'role__in': ['administrator', 'academic_director', 'tech_support', 'mini_tech_support', 'superuser']}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='student_profiles', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='children', to='base.parentprofile')),
                ('school_branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='base.schoolbranch')),
                ('session', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='base.session')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(choices=[('English Language', 'English Language'), ('Mathematics', 'Mathematics'), ('Physics', 'Physics'), ('Biology', 'Biology'), ('Chemistry', 'Chemistry'), ('Civic Education', 'Civic Education'), ('Home Economics', 'Home Economics'), ('Social Studies', 'Social Studies'), ('Government', 'Government'), ('Christian Religious Knowledge', 'Christian Religious Knowledge'), ('Agricultural Science', 'Agricultural Science'), ('Igbo Language', 'Igbo Language')], max_length=50, unique=True)),
                ('created_by', models.ForeignKey(blank=True, limit_choices_to={'role__in': ['administrator', 'academic_director', 'tech_support', 'mini_tech_support', 'superuser']}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_subjects', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Subjects',
            },
        ),
        migrations.AddField(
            model_name='course',
            name='subjects',
            field=models.ManyToManyField(blank=True, to='base.subject'),
        ),
        migrations.AddField(
            model_name='class',
            name='subjects',
            field=models.ManyToManyField(to='base.subject'),
        ),
        migrations.CreateModel(
            name='TeacherProfile',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('bio', models.TextField(blank=True, max_length=500, null=True)),
                ('gender', models.CharField(blank=True, choices=[('Male', 'Male'), ('Female', 'Female')], max_length=10, null=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('nationality', models.CharField(blank=True, choices=[('Benin', 'Benin'), ('Burkina Faso', 'Burkina Faso'), ('Cape Verde', 'Cape Verde'), ("Ivory Coast (Cote d'Ivoire)", "Ivory Coast (Cote d'Ivoire)"), ('Gambia', 'Gambia'), ('Ghana', 'Ghana'), ('Guinea', 'Guinea'), ('Guinea-Bissau', 'Guinea-Bissau'), ('Liberia', 'Liberia'), ('Mali', 'Mali'), ('Mauritania', 'Mauritania'), ('Niger', 'Niger'), ('Nigeria', 'Nigeria'), ('Senegal', 'Senegal'), ('Sierra Leone', 'Sierra Leone'), ('Togo', 'Togo')], max_length=30, null=True)),
                ('state', models.CharField(blank=True, choices=[('Enugu', 'Enugu'), ('Anambra', 'Anambra'), ('Imo', 'Imo'), ('Abia', 'Abia'), ('Ebonyi', 'Ebonyi')], max_length=30, null=True)),
                ('local_government_area', models.CharField(blank=True, choices=[('Aninri', 'Aninri'), ('Awgu', 'Awgu'), ('Enugu East', 'Enugu East'), ('Enugu North', 'Enugu North'), ('Enugu South', 'Enugu South'), ('Ezeagu', 'Ezeagu'), ('Igbo Etiti', 'Igbo Etiti'), ('Igbo Eze North', 'Igbo Eze North'), ('Igbo Eze South', 'Igbo Eze South'), ('Isi Uzo', 'Isi Uzo'), ('Nkanu East', 'Nkanu East'), ('Nkanu West', 'Nkanu West'), ('Nsukka', 'Nsukka'), ('Oji River', 'Oji River'), ('Udenu', 'Udenu'), ('Udi', 'Udi'), ('Uzo Uwani', 'Uzo Uwani')], max_length=50, null=True)),
                ('town', models.CharField(blank=True, max_length=100, null=True)),
                ('religion', models.CharField(blank=True, choices=[('Christian', 'Christian'), ('Muslim', 'Muslim'), ('Judaism', 'Judaism'), ('Others', 'Others')], max_length=50, null=True)),
                ('custom_user_id', models.UUIDField(null=True)),
                ('current_address', models.CharField(blank=True, max_length=200, null=True)),
                ('permanent_address', models.CharField(blank=True, max_length=200, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=16, null=True)),
                ('qualification', models.CharField(blank=True, choices=[('Phd', 'Phd'), ('Masters', 'Masters'), ('Bsc', 'Bsc'), ('Pgd', 'Pgd'), ('HND', 'HND'), ('ND', 'ND'), ('NCE', 'NCE'), ('WAEC', 'WAEC'), ('NECO', 'NECO'), ('NAPTEB', 'NAPTEB')], max_length=10, null=True)),
                ('cv', models.FileField(blank=True, null=True, upload_to=base.models.teacherCVPath)),
                ('relationship', models.CharField(choices=[('Single', 'Single'), ('Married', 'Married'), ('Divorced', 'Divorced'), ('Separated', 'Separated'), ('Single Parent', 'Single Parent')], max_length=15, null=True)),
                ('any_experience', models.CharField(blank=True, choices=[('No', 'No'), ('Yes', 'Yes')], default='None', max_length=5, null=True)),
                ('experience_description', models.TextField(blank=True, max_length=500, null=True)),
                ('teacher_status', models.CharField(choices=[('Full-time', 'Full-time'), ('Part-time', 'Part-time')], max_length=20)),
                ('salary', models.CharField(default='20,000', max_length=10, null=True)),
                ('assigned_class', models.ManyToManyField(related_name='teachers', to='base.class')),
                ('created_by', models.ForeignKey(blank=True, limit_choices_to={'role__in': ['administrator', 'academic_director', 'tech_support', 'mini_tech_support', 'superuser']}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='teacher_profiles', to=settings.AUTH_USER_MODEL)),
                ('school_branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='base.schoolbranch')),
                ('teacher_subject', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='teachers', to='base.subject')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ClassTimeTable',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=200)),
                ('image', models.ImageField(blank=True, null=True, upload_to=base.models.classTimeTablePath)),
                ('classes', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.classname')),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.classsection')),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.session')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.teacherprofile')),
            ],
            options={
                'verbose_name_plural': 'Class Time Table',
            },
        ),
        migrations.CreateModel(
            name='TechSupportProfile',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('bio', models.TextField(blank=True, max_length=500, null=True)),
                ('gender', models.CharField(blank=True, choices=[('Male', 'Male'), ('Female', 'Female')], max_length=10, null=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('nationality', models.CharField(blank=True, choices=[('Benin', 'Benin'), ('Burkina Faso', 'Burkina Faso'), ('Cape Verde', 'Cape Verde'), ("Ivory Coast (Cote d'Ivoire)", "Ivory Coast (Cote d'Ivoire)"), ('Gambia', 'Gambia'), ('Ghana', 'Ghana'), ('Guinea', 'Guinea'), ('Guinea-Bissau', 'Guinea-Bissau'), ('Liberia', 'Liberia'), ('Mali', 'Mali'), ('Mauritania', 'Mauritania'), ('Niger', 'Niger'), ('Nigeria', 'Nigeria'), ('Senegal', 'Senegal'), ('Sierra Leone', 'Sierra Leone'), ('Togo', 'Togo')], max_length=30, null=True)),
                ('state', models.CharField(blank=True, choices=[('Enugu', 'Enugu'), ('Anambra', 'Anambra'), ('Imo', 'Imo'), ('Abia', 'Abia'), ('Ebonyi', 'Ebonyi')], max_length=30, null=True)),
                ('local_government_area', models.CharField(blank=True, choices=[('Aninri', 'Aninri'), ('Awgu', 'Awgu'), ('Enugu East', 'Enugu East'), ('Enugu North', 'Enugu North'), ('Enugu South', 'Enugu South'), ('Ezeagu', 'Ezeagu'), ('Igbo Etiti', 'Igbo Etiti'), ('Igbo Eze North', 'Igbo Eze North'), ('Igbo Eze South', 'Igbo Eze South'), ('Isi Uzo', 'Isi Uzo'), ('Nkanu East', 'Nkanu East'), ('Nkanu West', 'Nkanu West'), ('Nsukka', 'Nsukka'), ('Oji River', 'Oji River'), ('Udenu', 'Udenu'), ('Udi', 'Udi'), ('Uzo Uwani', 'Uzo Uwani')], max_length=50, null=True)),
                ('town', models.CharField(blank=True, max_length=100, null=True)),
                ('religion', models.CharField(blank=True, choices=[('Christian', 'Christian'), ('Muslim', 'Muslim'), ('Judaism', 'Judaism'), ('Others', 'Others')], max_length=50, null=True)),
                ('custom_user_id', models.UUIDField(null=True)),
                ('current_address', models.CharField(blank=True, max_length=200, null=True)),
                ('permanent_address', models.CharField(blank=True, max_length=200, null=True)),
                ('relationship', models.CharField(choices=[('Single', 'Single'), ('Married', 'Married'), ('Divorced', 'Divorced'), ('Separated', 'Separated'), ('Single Parent', 'Single Parent')], max_length=15, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=16, null=True)),
                ('salary', models.CharField(default='20,000', max_length=10, null=True)),
                ('created_by', models.ForeignKey(blank=True, limit_choices_to={'role__in': ['administrator', 'academic_director', 'tech_support', 'mini_tech_support', 'superuser']}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tech_support_profiles', to=settings.AUTH_USER_MODEL)),
                ('school_branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='base.schoolbranch')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, limit_choices_to={'role__in': ['administrator', 'academic_director', 'tech_support', 'mini_tech_support', 'superuser']}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_topics', to=settings.AUTH_USER_MODEL)),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='topics', to='base.subject')),
            ],
            options={
                'verbose_name_plural': 'Topics',
                'ordering': ['name', 'created_on'],
            },
        ),
    ]
